--- # 0 # TODO: Re-format as JSON
DIGIT_STRING 		# LHS
DIGIT  				# The first after LHS is always the head
DIGIT_STRING : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)}	# The second and following ones are the non-heads # The number in the parentheses are the index to the parameter
_STRINGIZE_ 	n0 n1	# Stringization scheme. Node numbers are preceded by "n". Terminal nodes have their termName printed, whereas non terminals are subject to further stringization.
_MATH_TEX_      n0 n1
_EVAL_      	DIGIT_CONCAT(n0, n1)	# Calculation scheme: DIGIT_CONCAT is a special scheme that needs to be implemented by the evaluation routine.

--- # 1
DIGIT_STRING
DIGIT
_STRINGIZE_ 	n0
_MATH_TEX_      n0
_EVAL_ 			STRING(n0) # needs to be implemented by the evaluation routine

--- # 2
DECIMAL_NUMBER
POINT
DIGIT_STRING : {AlignBottom(0), PositionGenWest(0), HeightRelationGreater(0)} # Left digit string
DIGIT_STRING : {AlignBottom(0), PositionGenEast(0), HeightRelationGreater(0), HeightRelationEqual(1)} # Right digit string
_STRINGIZE_		n1 n0 n2
_MATH_TEX_      n1 n0 n2
_EVAL_ 			DECIMAL_BY_PARTS(n1, n2)

--- # 3
DECIMAL_NUMBER
DIGIT_STRING		# Degenerative case, NT head.
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 4
DECIMAL_NUMBER		# Negative sign
MINUS_OP
DECIMAL_NUMBER : {AlignMiddle(0), PositionEast(0)}
_STRINGIZE_		n0 n1
_MATH_TEX_      n0 { n1 }
_EVAL_ 			NEGATIVE(n1)

--- # 5
DECIMAL_NUMBER		# Superfluous plus sign
PLUS_OP
DECIMAL_NUMBER : {AlignMiddle(0), PositionEast(0)}
_STRINGIZE_		n0 n1
_MATH_TEX_      n0 { n1 }
_EVAL_ 			n1

--- # 6
EXPONENTIATION		(ASSOC: ASSOC_RIGHT_2B: EXPONENTIATION) # Base ^ Exponent.
EXPR_LV4			# The head is the base.
EXPR_LV4 : {AlignBottomNorthPastMiddle(0), AlignTopNorthPastTop(0), PositionGenEast(0)}	# The non-head is the exponent.
_STRINGIZE_		( n0 _SPACE_ ^ _SPACE_ n1 )		# _SPACE_ is a single space
_MATH_TEX_      { n0 } ^ { n1 }
_EVAL_			EXPONENTIATION(n0, n1)

--- # 7
EXPONENTIATION		### (ASSOC: ASSOC_RIGHT_2B: EXPONENTIATION) # Base ^ Exponent.
EXPR_LV0_5			# The head is the base.
EXPR_LV4 : {AlignBottomNorthPastMiddle(0), AlignTopNorthPastTop(0), PositionGenEast(0)}	# The non-head is the exponent.
_STRINGIZE_		( n0 _SPACE_ ^ _SPACE_ n1 )		# _SPACE_ is a single space
_MATH_TEX_      { n0 } ^ { n1 }
_EVAL_			EXPONENTIATION(n0, n1)

--- # 8
EXPR_LV1			# Nodes that can be the argument of a function
DECIMAL_NUMBER
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 9
EXPR_LV1
VARIABLE
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			EVAL_VARIABLE(n0)

--- # 10
EXPR_LV1
EXPONENTIATION
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 23
EXPR_LV1
MULTIPLICATION_VAR
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 11
EXPR_LV1
FRACTION_TERM
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 36
EXPR_LV1
SQROOT_TERM
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_ 			n0

--- # 12
EXPR_LV1			# Addition with parentheses
ADDITION
PARENTHESIS_L : {AlignMiddle(0), PositionWest(0)}	# Left parenthesis
PARENTHESIS_R : {AlignMiddle(0), PositionEast(0)}	# Right parenthesis
_STRINGIZE_ 	( n0 )
_MATH_TEX_      \left( n0 \right)
_EVAL_ 			n0

--- # 13
EXPR_LV1			# Subtraction with parentheses
SUBTRACTION
PARENTHESIS_L : {AlignMiddle(0), PositionWest(0)}	# Left parenthesis
PARENTHESIS_R : {AlignMiddle(0), PositionEast(0)}	# Right parenthesis
_STRINGIZE_ 	( n0 )
_MATH_TEX_      \left( n0 \right)
_EVAL_ 			n0

--- # 14
EXPR_LV0_5
MULTIPLICATION
PARENTHESIS_L : {AlignMiddle(0), PositionWest(0)}	# Left parenthesis
PARENTHESIS_R : {AlignMiddle(0), PositionEast(0)}	# Right parenthesis
_STRINGIZE_ 	( n0 )
_MATH_TEX_      \left( n0 \right)
_EVAL_ 			n0

--- # 15
MULTIPLICATION		(ASSOC: ASSOC_LEFT_3B: MULTIPLICATION)
MULT_OP
EXPR_LV1 : {AlignMiddle(0), PositionWest(0)} # 1st number
EXPR_LV1 : {AlignMiddle(0), PositionEast(0)} # 2nd number
_STRINGIZE_		( n1 _SPACE_ * _SPACE_ n2 )
_MATH_TEX_      { n1 } GET_TEX_MULTIPLY_OP(n0) { n2 }
_EVAL_			MULTIPLY(n1, n2)

---
VARIABLE_EXPONENTIATION    # The exponentiation of a variable, e.g., a^2, a^b, a^sqrt(a), a^(1/3) (without the parentheses) 
VARIABLE
EXPR_LV4 : {AlignBottomNorthPastMiddle(0), AlignTopNorthPastTop(0), PositionGenEast(0)}	# The non-head is the exponent.
_STRINGIZE_		( n0 _SPACE_ ^ _SPACE_ n1 )		# _SPACE_ is a single space
_MATH_TEX_      { n0 } ^ { n1 }
_EVAL_			EXPONENTIATION(n0, n1)

---
VARIABLE_EXPONENTIATION
VARIABLE
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 16
MULTIPLICATION_VAR		# Multiplication of two variables without the multiply operator (e.g., "ab").
VARIABLE_EXPONENTIATION                                     # Left variable
VARIABLE_EXPONENTIATION : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)} # Right variable
_STRINGIZE_		( n0 * n1 )
_MATH_TEX_      { n0 } { n1 }
_EVAL_			MULTIPLY(n0, n1)

--- # 17
MULTIPLICATION_VAR		# Multiplication of a number and a variable without the multiply operator (e.g., "3c").
DECIMAL_NUMBER                               # Left operand: A decimal number
VARIABLE_EXPONENTIATION : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)} # Right operand
_STRINGIZE_		( n0 * n1 )
_MATH_TEX_      { n0 } { n1 }
_EVAL_			MULTIPLY(n0, n1)

--- # 18
MULTIPLICATION_VAR		# Multiplication of an exponentiation and a variable without the multiply operator
EXPONENTIATION                               # Left operand: An exponentiation
VARIABLE_EXPONENTIATION : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)} # Right operand
_STRINGIZE_		( n0 * n1 )
_MATH_TEX_      { n0 } { n1 }
_EVAL_			MULTIPLY(n0, n1)

--- # 19
MULTIPLICATION_VAR		# Multiplication of a fraction and a variable without the multiply operator
FRACTION_TERM                                # Left operand: An fraction (or its negative)
VARIABLE_EXPONENTIATION : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)} # Right operand
_STRINGIZE_		( n0 * n1 )
_MATH_TEX_      { n0 } { n1 }
_EVAL_			MULTIPLY(n0, n1)

--- # 20
MULTIPLICATION_VAR		# Multiplication of a (square-)root and a variable without the multiply operator
SQROOT_TERM                                  # Left operand: An (square-)root (or its negative)
VARIABLE_EXPONENTIATION : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)} # Right operand
_STRINGIZE_		( n0 * n1 )
_MATH_TEX_      { n0 } { n1 }
_EVAL_			MULTIPLY(n0, n1)

--- # 21
MULTIPLICATION_VAR		# Infinite expansion for variable multiplication
MULTIPLICATION_VAR                           # Left operand: A variable multiplication itself (effectively making it a left association)
VARIABLE_EXPONENTIATION : {AlignMiddle(0), PositionEast(0), SpacingHorizontalBelowMeanMaxMajorTokenWidth(0)} # Right operand
_STRINGIZE_     ( n0 * n1 )
_MATH_TEX_      { n0 } { n1 }
_EVAL_			MULTIPLY(n0, n1)          

--- # 22
EXPR_LV1
MULTIPLICATION
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 24
EXPR_LV2
MULTIPLICATION
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 25
ADDITION	(ASSOC: ASSOC_LEFT_3B: ADDITION_SUBTRACTION)
PLUS_OP
EXPR_LV4 : {AlignMiddle(0), PositionWest(0)} # 1st number
EXPR_LV4 : {AlignMiddle(0), PositionEast(0)} # 2nd number
_STRINGIZE_		( n1 _SPACE_ n0 _SPACE_ n2 )
_MATH_TEX_      { n1 } GET_TEX_PLUS_OP(n0) { n2 }
_EVAL_			ADD(n1, n2)

--- # 26
SUBTRACTION	(ASSOC: ASSOC_LEFT_3B: ADDITION_SUBTRACTION)
MINUS_OP
EXPR_LV4 : {AlignMiddle(0), PositionWest(0)} # 1st number
EXPR_LV4 : {AlignMiddle(0), PositionEast(0)} # 2nd number
_STRINGIZE_		( n1 _SPACE_ n0 _SPACE_ n2 )
_MATH_TEX_      { n1 } GET_TEX_MINUS_OP(n0) { n2 }
_EVAL_			SUBTRACT(n1, n2)

--- # 27
EXPR_LV3
ADDITION
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 28
EXPR_LV3
SUBTRACTION
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 29
FRACTION
MINUS_OP
EXPR_LV4 : {AlignWidthInclusion(0), PositionSouth(0)} # Denominator.
EXPR_LV4 : {AlignWidthInclusion(0), PositionNorth(0)} # Numerator
_STRINGIZE_		( n1 _SPACE_ / _SPACE_ n2 )
_MATH_TEX_      \frac { n1 } { n2 }
_EVAL_			DIVIDE(n2, n1)

--- # 30
SQROOT
ROOT_OP
EXPR_LV4 : {AlignBottom(0), AlignLeftWithin(0), AlignRightWithin(0), HeightRelationLess(0)}
_STRINGIZE_		( sqrt _OPEN_PAREN_ n1 _CLOSE_PAREN_ )
_MATH_TEX_      \sqrt { n1 }
_EVAL_			SQRT(n1)

--- # 31
SQROOT_TERM
SQROOT
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_ 			n0

--- # 32
SQROOT_TERM         # NEGATIVE of SQROOT
MINUS_OP
SQROOT : {AlignMiddle(0), PositionEast(0)}
_STRINGIZE_		n0 n1
_MATH_TEX_      n0 n1
_EVAL_ 			NEGATIVE(n1)


--- # 33
FRACTION_TERM
FRACTION
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_ 			n0

--- # 34
FRACTION_TERM		# Negative of fraction
MINUS_OP
FRACTION_TERM : {AlignMiddle(0), PositionEast(0)}
_STRINGIZE_		n0 n1
_MATH_TEX_      n0 n1
_EVAL_ 			NEGATIVE(n1)

--- # 35
EXPR_LV3
FRACTION_TERM
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_ 			n0

--- # 37
EXPR_LV4
EXPR_LV1
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 38
EXPR_LV4
EXPR_LV0_5
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 39
EXPR_LV4
EXPR_LV2
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 40
EXPR_LV4
EXPR_LV3
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 
EXPR_LV1
MATH_FUNCTION_TERM
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 41
VARIABLE
VARIABLE_SYMBOL
_STRINGIZE_ 	n0
_MATH_TEX_      n0
_EVAL_ 			STRING(n0)

--- # 42
ASSIGNMENT_STATEMENT
ASSIGN_OP
VARIABLE                : {AlignMiddle(0), PositionWest(0)} # Variable symbol
EXPR_LV4                : {AlignMiddle(0), PositionEast(0)} # Value expression
_STRINGIZE_		( n1 _SPACE_ n0 _SPACE_ n2 )
_MATH_TEX_      { n1 } GET_TEX_ASSIGN_OP(n0) { n2 }
_EVAL_			VARIABLE_ASSIGN_VALUE(n1, n2);

--- # 43
MATH_FUNCTION_NAME  # Elementary function: "ln"
TERMINAL(l)
TERMINAL(n)         : {AlignBottom(0), PositionEast(0)}
_STRINGIZE_     n0 n1
_MATH_TEX_      \ln
_EVAL_          GET_MATH_FUNCTION_2CHAR_1ARG(n0, n1)   # TODO: Get rid of dependency on the number of arguments; Remove the ugliness

--- # 44
MATH_FUNCTION_NAME  # Elementary function: "sin"
TERMINAL(s)
TERMINAL(i)         : {AlignBottom(0), PositionEast(0)}
TERMINAL(n)         : {AlignBottom(1), PositionEast(1)}
_STRINGIZE_     n0 n1 n2
_MATH_TEX_      \sin
_EVAL_          GET_MATH_FUNCTION_3CHAR_1ARG(n0, n1, n2)   # TODO: Get rid of dependency on the number of arguments; Remove the ugliness

--- # 45
MATH_FUNCTION_NAME  # Elementary function: "cos"
TERMINAL(c)
TERMINAL(o)         : {AlignBottom(0), PositionEast(0)}
TERMINAL(s)         : {AlignBottom(1), PositionEast(1)}
_STRINGIZE_     n0 n1 n2
_MATH_TEX_      \cos
_EVAL_          GET_MATH_FUNCTION_3CHAR_1ARG(n0, n1, n2)   # TODO: Get rid of dependency on the number of arguments; Remove the ugliness

--- # 44
MATH_FUNCTION_TERM # Functions with arguments, e.g., "ln 3"
MATH_FUNCTION_NAME
EXPR_LV1                : {AlignMiddle(0), PositionEast(0)} # The argument of the function
_STRINGIZE_     n0 ( n1 )
_MATH_TEX_      n0 { n1 }
_EVAL_          CALL_FUNCTION_1ARG(n0, n1) 

--- #
ROW_CONTENT
EXPR_LV4
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- #
ROW_CONTENT
ROW_CONTENT
EXPR_LV4		        : {AlignMiddle(0), PositionEast(0), SpacingHorizontalExceedsMeanMaxMajorTokenWidth(0)} # The argument of the function
_STRINGIZE_     n0 , _SPACE_ n1
_MATH_TEX_      n0 & n1
_EVAL_          ADD(n0, n1)  	# TODO: Replace this placeholder

--- #
COLUMN_CONTENT
ROW_CONTENT
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- #
COLUMN_CONTENT
COLUMN_CONTENT
ROW_CONTENT		        : {AlignCenter(0), PositionNorth(0)} # The argument of the function
_STRINGIZE_     n0 ; _SPACE_ n1
_MATH_TEX_      n0 \\ n1
_EVAL_          ADD(n0, n1)  	# TODO: Replace this placeholder

--- # __ Matrix
MATRIX
COLUMN_CONTENT
BRACKET_L      : {AlignMiddle(0), PositionWest(0)}
BRACKET_R      : {AlignMiddle(0), PositionEast(0)}
_STRINGIZE_		[ n0 ]    # MATLAB-style
_MATH_TEX_      \begin{bmatrix} n0 \end{bmatrix}
_EVAL_			n0 # TODO

--- # 46
ROOT
EXPR_LV4
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 48
ROOT
ASSIGNMENT_STATEMENT
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 49
ROOT
VARIABLE
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0

--- # 50
ROOT
MATRIX
_STRINGIZE_		n0
_MATH_TEX_      n0
_EVAL_			n0
